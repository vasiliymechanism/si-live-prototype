{
  "version": 2,
  "start": "potentialMatch",

  // Notes:
  // - This is a skeleton: states + transitions only (no timings/weights).
  // - Gates use "skipIfSatisfied": true semantics (blockers auto-bypass if already met).
  // - Readiness branches: only minor details missing, only documents missing, or both missing.

  "states": {
    /* =========================
       Phase A — Find & Vet
       ========================= */
    "potentialMatch": {
      "label": "Potential match",
      "durationMs": [200, 400],
      "progress": [0, 0],
      "next": "vetEligibility"
    },

    "vetEligibility": {
      "label": "Checking eligibility",
      "durationMs": [200, 400],
      "progress": [5, 10],
      "next": [
        { "to": "confirmEligibility",   "weight": 0.8 },
        { "to": "notEligible",        "weight": 0.05 },
        { "to": "eligible",           "weight": 0.15 }
      ]
    },

    "confirmEligibility": {
      "label": "Needs profile information",
      "skipIfSatisfied": true,
      "durationMs": [400, 800],
      "progress": [10, 15],
      "blockers": {
        "mode": "subset",
        "pick": { "min": 1, "max": 2 },          // choose 1–2 blockers
        // If you prefer independent probabilities instead of "pick", you can use:
        // "includeProb": true and set "prob" on each pool item (engine supports both).
        "pool": [
          { "id": "updateProfileViaQuiz",       "type": "custom",     "weight": 1.0, "actionType": "updateProfileViaQuiz" },
          { "id": "gpaEntered",                 "type": "userField",  "weight": 0.1, "actionType": "inputGPA", "field": "gpa" },
          { "id": "currentSchoolLevelEntered",  "type": "userField", "weight": 0.4, "actionType": "inputCurrentSchoolLevel", "field": "currentSchoolLevel" },
          { "id": "genderEntered",              "type": "userField", "weight": 0.01, "actionType": "inputGender", "field": "gender" }
        ]
      },
      "next": [
        { "to": "eligible", "weight": 0.96 },
        { "to": "notEligible", "weight": 0.04 }
      ]
    },

    "notEligible": {
      "label": "Not eligible",
      "durationMs": [100, 200],
      "progress": [15, 15],
      "terminal": true
    },

    "eligible": {
      "label": "Match found",
      "durationMs": [500, 1000],
      "progress": [15, 15],
      "next": "buildPackage"
    },

    /* =========================
       Phase B — Build by Default
       ========================= */
    "buildPackage": {
      "label": "Assembling application package",
      "durationMs": [800, 1200],
      "progress": [22, 24],
      "next": "autofillCore"
    },

    "autofillCore": {
      "label": "Autofilling core fields",
      "durationMs": [400, 800],
      "progress": [37, 39],
      "next": [
        { "to": "draftEssays", "weight": 0.9 },
        { "to": "gatherMissingData", "weight": 0.07 },
        { "to": "preSubmitChecks", "weight": 0.03 } // direct to readiness if no essay needed
      ]
    },

    "draftEssays": {
      "label": "Generating essay",
      "durationMs": [3200, 5000],
      "progress": [63, 71],
      "next": [
        { "to": "gatherMissingData", "weight": 0.5 },
        { "to": "preSubmitChecks", "weight": 0.5 } // direct to readiness if no essay needed
      ]
    },

    /* ==========================================
       Phase C — Resolve Missing Details/Documents
       ========================================== */
    "gatherMissingData": {
      "label": "Some user input needed",
      "durationMs": [100, 300],
      "progress": [71, 73],
      // Engine computes two dynamic buckets here:
      //   - missingMinorDetails (e.g., homeAddress, fallSchool, FAO contact)
      //   - missingDocuments   (e.g., transcript, proofOfEnrollment, ID)
      "next": "readinessDecision"
    },

    "readinessDecision": {
      "label": "Gathering required inputs",
      "durationMs": [500, 1200],
      "progress": [73, 78],
      "next": [
        { "to": "readyPendingMinorDetails", "weight": 0.2 },
        { "to": "readyPendingDocs",         "weight": 0.7 },
        { "to": "readyPendingBoth",         "weight": 0.1 }
      ]
    },

    /* ======================================
       Phase D — Three “Almost-Ready” Lanes
       ====================================== */
    "readyPendingMinorDetails": {
      "label": "Ready pending final user details",
      "durationMs": [100, 200],
      "progress": [78, 80],
      "skipIfSatisfied": true,
      "blockers": {
        "mode": "subset",
        "pick": { "min": 1, "max": 2 },          // choose 1–2 blockers
        // If you prefer independent probabilities instead of "pick", you can use:
        // "includeProb": true and set "prob" on each pool item (engine supports both).
        "pool": [
          { "id": "financialAidAddressEntered", "type": "userField", "weight": 0.05, "actionType": "inputFinancialAidAddress", "field": "financialAidAddress" },
          { "id": "homeAddressEntered",         "type": "userField", "weight": 0.25, "actionType": "inputHomeAddress", "field": "homeAddress" },
          { "id": "phoneNumberEntered",         "type": "userField", "weight": 0.10, "actionType": "inputPhoneNumber", "field": "phoneNumber" },
          { "id": "emailEntered",               "type": "userField", "weight": 0.60, "actionType": "inputEmail", "field": "email" }
        ]
      },
      "next": "preSubmitChecks"
    },

    "readyPendingDocs": {
      "label": "Ready pending transcript",
      "durationMs": [100, 200],
      "progress": [78, 80],
      "skipIfSatisfied": true,
      "blockers": {
        "mode": "subset",
        "pick": { "min": 1, "max": 1 },          // choose 1–2 blockers
        // If you prefer independent probabilities instead of "pick", you can use:
        // "includeProb": true and set "prob" on each pool item (engine supports both).
        "pool": [
          { "id": "collegeTranscriptUploaded", "type": "userField", "weight": 0.8, "actionType": "uploadCollegeTranscript", "field": "collegeTranscript" },
          { "id": "highSchoolTranscriptUploaded", "type": "userField", "weight": 0.2, "actionType": "uploadHighSchoolTranscript", "field": "highSchoolTranscript" }
        ]
      },
      "next": "preSubmitChecks"
    },

    "readyPendingBoth": {
      "label": "Ready pending user inputs",
      "skipIfSatisfied": true,
      "durationMs": [100, 200],
      "progress": [78, 80],
      "blockers": {
        "mode": "all",   // ALL required blockers must be satisfied to proceed
        "list": [
          // Requires a trial for all users
          { "id": "collegeTranscriptUploaded",      "type": "userField", "actionType": "uploadCollegeTranscript", "field": "collegeTranscript" },
          { "id": "financialAidAddressEntered",     "type": "userField", "actionType": "enterFinancialAidAddress", "field": "financialAidAddress" }
        ]
      },
      "next": "preSubmitChecks"
    },

    /* ==============================
       Phase E — Finalize & Trial Gate
       ============================== */
    "preSubmitChecks": {
      "label": "Final validations",
      "durationMs": [300, 600],
      "progress": [85, 88],
      "next": "readyPendingTrial"
    },

    "readyPendingTrial": {
      "label": "Ready to submit (start free trial)",
      "skipIfSatisfied": true,
      "durationMs": [100, 200],
      "progress": [96, 97],
      "blockers": {
        "mode": "all",
        "list": [
          { "id": "trialStarted", "type": "custom", "actionType": "startTrial", "condition": { "trialStarted": true } }
        ]
      },
      "next": "submitted"
    },

    /* =========================
       Phase F — Submit & Outcomes
       ========================= */
    // "submit": {
    //   "label": "Auto-submit application",
    //   "next": [
    //     { "to": "submitted",       "when": "submissionSucceeded" },
    //     { "to": "submissionError", "when": "submissionFailed" }
    //   ]
    // },

    "submitted": {
      "label": "Submitted",
      "durationMs": [300, 1000],
      "progress": [100, 100],
      "terminal": true
    }

  //   "submissionError": {
  //     "label": "Submission error",
  //     "next": [
  //       { "to": "needHumanAction", "when": "requiresInteractiveStep" },
  //       { "to": "preSubmitChecks", "when": "revalidateOrAdjust" }
  //     ]
  //   },

  //   "needHumanAction": {
  //     "label": "Needs a specific human step",
  //     "skipIfSatisfied": true,
  //     "blockers": {
  //       "mode": "all",
  //       "listFrom": "manualInterventionItems" // e.g., portal captcha, live identity check, etc.
  //     },
  //     "next": "preSubmitChecks"
  //   }
  }
}
